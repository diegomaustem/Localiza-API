generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id String @id @default(uuid())
  full_name String @db.VarChar(45)
  email     String @unique @db.VarChar(45) 
  address   String @db.VarChar(65)
  gender    String @db.VarChar(4)
  telephone String @db.VarChar(16)
  password  String @db.VarChar(200)
  IdPrivileges String @map("id_privileges")
  IdStatusUsers String @map("id_status_users")
  creation_date DateTime @default(now())
  update_date   DateTime @updatedAt
  privilege   Privilege @relation(fields: [IdPrivileges], references: [id])
  status_user StatusUser @relation(fields: [IdStatusUsers], references: [id]) 
  
  @@map("users")
}
model Privilege {
  id String @id @default(uuid())
  name String @unique @db.VarChar(45)
  creation_date DateTime @default(now())
  update_date   DateTime @updatedAt
  users User[]

  @@map("privileges")
}
model Honor {
  id String @id @default(uuid())
  name String @unique @db.VarChar(45) 
  level Int @db.Integer
  creation_date DateTime @default(now())
  update_date   DateTime @updatedAt
  customers Customer[]

  @@map("honors")
}
model Nationality {
  id String @id @default(uuid())
  name String @unique @db.VarChar(45) 
  creation_date DateTime @default(now())
  update_date   DateTime @updatedAt
  customers     Customer[]

  @@map("nationalities")
}
model Customer {
  id String @id @default(uuid())
  full_name String @db.VarChar(45) 
  cpf String @unique @db.VarChar(15) 
  email String @unique @db.VarChar(45) 
  gender String @db.VarChar(4)
  password String @db.VarChar(200)
  points Int @db.Integer
  address String @db.VarChar(65)
  telephone String @db.VarChar(16)
  cnh_code String @unique @db.VarChar(25)
  cnh_category String @db.VarChar(6)
  IdHonors String @map("honors_id")
  IdNationalities String @map("nationalities_id") 
  IdStatusCustomers String @map("status_customers_id")
  creation_date DateTime @default(now())
  update_date DateTime @updatedAt
  honor Honor @relation(fields: [IdHonors], references: [id])
  nationality Nationality @relation(fields: [IdNationalities], references: [id])
  status_customer StatusCustomer @relation(fields: [IdStatusCustomers], references: [id]) 
  reserves Reserve[]

  @@map("customers")
}
model Reserve {
  id String @id @default(uuid())
  daily_amount Int @db.Integer
  withdrawn DateTime @db.Date
  return DateTime @db.Date
  value Decimal @db.Decimal(10, 2)
  status String @db.VarChar(20)
  IdCustomer String @map("customers_id")
  IdVehicle String @map("vehicles_id")
  creation_date DateTime @default(now())
  update_date   DateTime @updatedAt
  customer Customer @relation(fields: [IdCustomer], references: [id])
  vehicle  Vehicle @relation(fields: [IdVehicle], references: [id])

  @@map("reserves")
}
model Vehicle {
  id String  @id @default(uuid())
  chassi String @unique @db.VarChar(45)      
  plate String @unique @db.VarChar(45)
  mark String @db.VarChar(30)
  model String @db.VarChar(20)
  year Int @db.Integer
  color String @db.VarChar(20)
  crlv_document String @unique @db.VarChar(45)
  cylinder_capacity Int @db.Integer
  status String @db.VarChar(20)
  IdUnit String @map("units_id")
  IdCategory String @map("categories_id")
  IdGroup  String @map("groups_id")
  creation_date DateTime @default(now())
  update_date DateTime @updatedAt
  unit     Unit      @relation(fields: [IdUnit], references: [id])
  category Category @relation(fields: [IdCategory], references: [id])
  group    Group     @relation(fields: [IdGroup], references: [id])
  reserves Reserve[]

  @@map("vehicles")
}
model Category {
  id            String   @id @default(uuid())
  name          String   @unique @db.VarChar(45)
  value         Decimal  @db.Decimal(10, 2)
  creation_date DateTime @default(now())
  update_date   DateTime @updatedAt
  vehicles      Vehicle[] 

  @@map("categories")
}
model Group {
  id            String   @id @default(uuid())
  name          String   @unique @db.VarChar(45)
  description   String? @db.VarChar(255)
  creation_date DateTime @default(now())
  update_date   DateTime @updatedAt
  vehicles      Vehicle[]

  @@map("groups")
}
model Unit {
  id        String @id @default(uuid())
  unit      String @db.VarChar(45)
  IdCity String @map("cities_id")
  creation_date DateTime @default(now())
  update_date   DateTime @updatedAt
  city      City @relation(fields: [IdCity], references: [id])
  vehicles  Vehicle[]

  @@map("units")
}
model City {
  id            String   @id @default(uuid())
  name          String   @db.VarChar(45)
  IdState String @map("states_id")
  creation_date DateTime @default(now())
  update_date   DateTime @updatedAt
  state         State @relation(fields: [IdState], references: [id])
  units         Unit[]

  @@map("cities")
}
model State {
  id            String   @id @default(uuid())
  name          String   @unique @db.VarChar(45)
  abbreviation  String   @unique @db.VarChar(45)
  creation_date DateTime @default(now())
  update_date   DateTime @updatedAt
  cities        City[]

  @@map("states")
}
model StatusCustomer {
  id String   @id @default(uuid())
  status   String @unique @db.VarChar(50)
  description String? @db.VarChar(255)
  creation_date DateTime @default(now())
  update_date   DateTime @updatedAt
  customers Customer[]

  @@map("status_customers")
}
model StatusUser {
  id String   @id @default(uuid())
  status   String @unique @db.VarChar(50)
  description String? @db.VarChar(255)
  creation_date DateTime @default(now())
  update_date   DateTime @updatedAt
  users User[]

  @@map("status_users")
}
